library(tidyverse)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(x)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
install.packages(xlsx)
"xlsx"
install.packages("xlsx")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(readxl)
Dataset_G1 <- read_excel("Dataset-G1.xlsx")
View(Dataset_G1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(Dataset_G1)
View(Dataset_G1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(x)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(Dataset_G1)
View(Dataset_G1)
View(Dataset_G1)
source('~/.active-rstudio-document', echo=TRUE)
ls
ls()
help("ls")
?ls
args(ls)
args(args)
?pow
?power
power(2)
?^
?"^"
data()
CO2
source('~/.active-rstudio-document')
#(Dataset_G1.PID)
(x <- read.csv2("Dataset-G1.csv"))
environment()
str(x)
data()
?data
data(x)
head(x)
names(x)
x$Game
levels(x$Game)
View(x)
str(x)
class(frag)
frag <- x$VF
importance_frag <- x$IVF
class(frag)
#ggplot(diamonds, aes(carat, price))+
#  geom_hex()
#ggsave("diamonds.pdf")
#write_csv(diamonds, "diamonds.csv")
frag <- x$VF
importance_frag <- x$IVF
class(frag)
class(importance_frag)
#ggplot(diamonds, aes(carat, price))+
#  geom_hex()
#ggsave("diamonds.pdf")
#write_csv(diamonds, "diamonds.csv")
importance_frag <- x$IVF
class(frag)
class(importance_frag)
#ggplot(diamonds, aes(carat, price))+
#  geom_hex()
#ggsave("diamonds.pdf")
#write_csv(diamonds, "diamonds.csv")
class(frag)
class(importance_frag)
#ggplot(diamonds, aes(carat, price))+
#  geom_hex()
#ggsave("diamonds.pdf")
#write_csv(diamonds, "diamonds.csv")
class(frag)
frag <- x['VF']
importance_frag <- x$IVF
class(frag)
class(importance_frag)
#ggplot(diamonds, aes(carat, price))+
#  geom_hex()
#ggsave("diamonds.pdf")
#write_csv(diamonds, "diamonds.csv")
frag_and_imp <- c(frag, importance_frag)
View(frag_and_imp)
View(frag)
View(frag_and_imp)
frag
importance_frag
frag_and_imp <- c(frag, importance_frag)
#ggplot(diamonds, aes(carat, price))+
#  geom_hex()
#ggsave("diamonds.pdf")
#write_csv(diamonds, "diamonds.csv")
frag_and_imp <- c(frag, importance_frag)
#ggplot(diamonds, aes(carat, price))+
#  geom_hex()
#ggsave("diamonds.pdf")
#write_csv(diamonds, "diamonds.csv")
View(frag_and_imp)
frag_and_imp[["VF"]]
a <- c(2, 5, 3, 4, 1, 8)
b <- order(a)
a <- c(298, 57, 32, 44, 15, 80)
b <- order(a)
?order
a
a(b)
a[b]
frag_and_imp <- data.frame((frag, importance_frag))
frag_and_imp <- data.frame(frag, importance_frag)
View(frag_and_imp)
frag_and_imp <- sort(frag_and_imp)
frag_and_imp <- sort(frag_and_imp$importance_frag)
#ggplot(diamonds, aes(carat, price))+
#  geom_hex()
#ggsave("diamonds.pdf")
#write_csv(diamonds, "diamonds.csv")
frag_and_imp <- frag_and_imp[which.min(frag_and_imp$importance_frag)]
#ggplot(diamonds, aes(carat, price))+
#  geom_hex()
#ggsave("diamonds.pdf")
#write_csv(diamonds, "diamonds.csv")
frag_and_imp <- frag_and_imp[which.min(frag_and_imp$importance_frag)]
frag_and_imp <- data.frame(frag, importance_frag)
View(frag_and_imp)
?sort
?order
o <- order(frag_and_imp)
(o <- order(frag_and_imp))
o <- order(frag_and_imp)
(a <- frag_and_imp[o])
(a <- frag_and_imp(o))
(a <- frag_and_imp)
?sum
?mean
frag_and_imp[o]
o <- order(frag_and_imp$importance_frag)
frag_and_imp[o]
fr <- frag_and_imp[o]
o <- order(frag_and_imp$importance_frag)
frag <- x['VF']
importance_frag <- x['IVF']
class(frag) # bu data frame, cunku alt kume
class(importance_frag) # bu ise vektor
frag
importance_frag
frag_and_imp <- c(frag, importance_frag)
frag_and_imp <- data.frame(frag, importance_frag)
o <- order(frag_and_imp$importance_frag)
#fr <- frag_and_imp[o]
library(tidyverse)
#(Dataset_G1.PID)
x <- read.csv2("Dataset-G1.csv")
frag <- x['VF']
importance_frag <- x['IVF']
class(frag) # bu data frame, cunku alt kume
class(importance_frag) # bu ise vektor
frag
importance_frag
frag_and_imp <- c(frag, importance_frag)
frag_and_imp <- data.frame(frag, importance_frag)
o <- order(frag_and_imp$importance_frag)
#fr <- frag_and_imp[o]
fr <- frag_and_imp[o]
View(frag_and_imp)
o <- order(frag_and_imp$VF)
fr <- frag_and_imp[o]
library(tidyverse)
#(Dataset_G1.PID)
x <- read.csv2("Dataset-G1.csv")
frag <- x['VF']
importance_frag <- x['IVF']
class(frag) # bu data frame, cunku alt kume
class(importance_frag) # bu ise vektor
frag
importance_frag
frag_and_imp <- c(frag, importance_frag)
frag_and_imp <- data.frame(frag, importance_frag)
o <- order(frag_and_imp$VF)
fr <- frag_and_imp[o]
o
fr <- frag_and_imp[o]
fr <- frag_and_imp[o]
?which
frag_and_imp <- mutate(x, VF, IVF)
View(frag_and_imp)
library(tidyverse)
library(dplyr)
#(Dataset_G1.PID)
x <- read.csv2("Dataset-G1.csv")
# frag <- x['VF']
# importance_frag <- x['IVF']
# class(frag) # bu data frame, cunku alt kume
# class(importance_frag) # bu ise vektor
# frag_and_imp <- c(frag, importance_frag)
# frag_and_imp <- data.frame(frag, importance_frag)
frag_and_imp <- mutate(x, VF, IVF)
View(frag_and_imp)
# frag_and_imp <- c(frag, importance_frag)
# frag_and_imp <- data.frame(frag, importance_frag)
frag_and_imp <- select(x, VF, IVF)
View(frag_and_imp)
# frag_and_imp <- c(frag, importance_frag)
# frag_and_imp <- data.frame(frag, importance_frag)
frag_and_imp <- select(x, VF, IVF) %>% hist()
# frag_and_imp <- c(frag, importance_frag)
# frag_and_imp <- data.frame(frag, importance_frag)
frag_and_imp <- select(x, VF) %>% hist()
# frag_and_imp <- c(frag, importance_frag)
# frag_and_imp <- data.frame(frag, importance_frag)
frag_and_imp <- select(x, VF) %>% as.numeric() %>% hist()
# frag_and_imp <- c(frag, importance_frag)
# frag_and_imp <- data.frame(frag, importance_frag)
frag_and_imp <- select(x, VF) %>% is.numeric() %>% hist()
# frag_and_imp <- c(frag, importance_frag)
# frag_and_imp <- data.frame(frag, importance_frag)
frag_and_imp <- select(x, VF) %>% as.numeric() %>% hist()
# frag_and_imp <- c(frag, importance_frag)
# frag_and_imp <- data.frame(frag, importance_frag)
frag_and_imp <- select(x, VF) %>% as.integer() %>% hist()
# frag_and_imp <- c(frag, importance_frag)
# frag_and_imp <- data.frame(frag, importance_frag)
frag_and_imp <- select(x, VF, IVF) %>% hist()
c(2, 3, 1)%>% hist()
# frag_and_imp <- c(frag, importance_frag)
# frag_and_imp <- data.frame(frag, importance_frag)
# frag_and_imp <- select(x, VF, IVF)
plot(frag_and_imp$VF, frag_and_imp$IVF)
?boxplot
str(mtcars)
# plot(frag_and_imp$VF, frag_and_imp$IVF)
boxplot(VF~IVF, frag_and_imp)
View(Dataset_G1)
?lm
?mean
?pnorm
?qnorm
freq <- select(x, VF)
freq <- dplyr::select(x, VF)
#(Dataset_G1.PID)
x <- read.csv2("Dataset-G1.csv")
# frag <- x['VF']
# importance_frag <- x['IVF']
# class(frag) # bu data frame, cunku alt kume
# class(importance_frag) # bu ise vektor
# frag_and_imp <- c(frag, importance_frag)
# frag_and_imp <- data.frame(frag, importance_frag)
frag_and_imp <- select(x, VF, IVF)
# plot(frag_and_imp$VF, frag_and_imp$IVF)
boxplot(VF~IVF, frag_and_imp)
freq <- dplyr::select(x, VF)
View(x)
View(freq)
p <- seq(0.5, 0.95, 0.5)
?seq
p <- seq(0.5, 0.95, by=0.5)
boxplot(VF~IVF, frag_and_imp)
freq <- dplyr::select(x, VF)
p <- seq(0.5, 0.95, by=0.5)
p <- seq(0.05, 0.95, by=0.05)
?quantile
q <- quantile(freq, p)
freq <- dplyr::select(x, VF)
p <- seq(0.05, 0.95, by=0.05)
q <- quantile(freq, p)
theortical <- qnorm(p)
q <- quantile(freq, p)
q <- quantile(x$VF, p)
plot(q, theortical)
plot(q)
plot(theortical)
plot(theortical_quantiles, observed_quantiles)
?abline
freq <- dplyr::select(x, VF)
p <- seq(0.05, 0.95, by=0.05)
observed_quantiles <- quantile(x$VF, p)
theortical_quantiles <- qnorm(p)
plot(theortical_quantiles, observed_quantiles)
abline(0, 1)
theortical_quantiles <- qnorm(p, mean = mean(x$VF), sd = sd(x$VF))
freq <- dplyr::select(x, VF)
p <- seq(0.05, 0.95, by=0.05)
observed_quantiles <- quantile(x$VF, p)
theortical_quantiles <- qnorm(p, mean = mean(x$VF), sd = sd(x$VF))
plot(theortical_quantiles, observed_quantiles)
abline(0, 1)
plot(theortical_quantiles, observed_quantiles)
theortical_quantiles <- qnorm(p)
plot(theortical_quantiles, observed_quantiles)
abline(0, 1)
theortical_quantiles <- qnorm(p, mean = mean(x$VF), sd = sd(x$VF))
# theortical_quantiles <- qnorm(p)
plot(theortical_quantiles, observed_quantiles)
abline(0, 1)
?quantile
install.packages("dslabs")
library(ggplot2)
library(dslabs)
data(murders)
force(murders)
library(ggplot2)
library(dslabs)
data(murders)
ggplot(murders)
# murders %>% ggplot()
+ aes(murders$population/10^6, murders$total)
library(ggplot2)
library(dslabs)
data(murders)
ggplot(murders) # geometri eklemedegimiz icin, yalnizca gri arka plan
# layerlar geometri tanimi, istatistik hesabi, style degisimi icin kullanilan katmanlar
#DATA %>% ggplot() + Layer1 + Layer2...
# murders %>% ggplot()
+ aes(murders$population/10^6, murders$total)
# murders %>% ggplot()
+ geom_point( aes(murders$population/10^6, murders$total))
library(ggplot2)
library(dslabs)
data(murders)
ggplot(murders) # geometri eklemedegimiz icin, yalnizca gri arka plan
# layerlar geometri tanimi, istatistik hesabi, style degisimi icin kullanilan katmanlar
#DATA %>% ggplot() + Layer1 + Layer2...
# murders %>% ggplot()
+ geom_point( aes(murders$population/10^6, murders$total))
library(ggplot2)
library(dslabs)
data(murders)
ggplot(murders) + # geometri eklemedegimiz icin, yalnizca gri arka plan
# layerlar geometri tanimi, istatistik hesabi, style degisimi icin kullanilan katmanlar
#DATA %>% ggplot() + Layer1 + Layer2...
# murders %>% ggplot()
+ geom_point( aes(murders$population/10^6, murders$total))
+ geom_point( aes(murders$population/10^6, murders$total))
# layerlar geometri tanimi, istatistik hesabi, style degisimi icin kullanilan katmanlar
#DATA %>% ggplot() + Layer1 + Layer2...
# murders %>% ggplot()
library(ggplot2)
library(dslabs)
data(murders)
ggplot(murders) + # geometri eklemedegimiz icin, yalnizca gri arka plan
+ geom_point( aes(murders$population/10^6, murders$total))
# layerlar geometri tanimi, istatistik hesabi, style degisimi icin kullanilan katmanlar
#DATA %>% ggplot() + Layer1 + Layer2...
# murders %>% ggplot()
library(ggplot2)
library(dslabs)
data(murders)
# geometri eklemedegimiz icin, yalnizca gri arka plan
ggplot(murders) +
+ geom_point( aes(murders$population/10^6, murders$total))
# layerlar geometri tanimi, istatistik hesabi, style degisimi icin kullanilan katmanlar
#DATA %>% ggplot() + Layer1 + Layer2...
# murders %>% ggplot()
library(ggplot2)
library(dslabs)
data(murders)
# geometri eklemedegimiz icin, yalnizca gri arka plan
ggplot(murders) +
+ geom_point( aes(murders$population/10^6, murders$total))
# layerlar geometri tanimi, istatistik hesabi, style degisimi icin kullanilan katmanlar
#DATA %>% ggplot() + Layer1 + Layer2...
# murders %>% ggplot()
# geometri eklemedegimiz icin, yalnizca gri arka plan
ggplot(murders) + geom_point( aes(murders$population/10^6, murders$total))
# geometri eklemedegimiz icin, yalnizca gri arka plan
ggplot(murders)
+ geom_point( aes(murders$population/10^6, murders$total))
ggplot(murders)
+ geom_point( aes(murders$population/10^6, murders$total))
# layerlar geometri tanimi, istatistik hesabi, style degisimi icin kullanilan katmanlar
#DATA %>% ggplot() + Layer1 + Layer2...
# murders %>% ggplot()
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R')
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
# geometri eklemedegimiz icin, yalnizca gri arka plan
ggplot(murders) +
geom_point( aes(murders$population/10^6, murders$total))
# geometri eklemedegimiz icin, yalnizca gri arka plan
ggplot(murders) +
geom_point( aes(murders$population/10^6, murders$total)) +
geom_text(aes(murders$population/10^6, murders$total, label = murders$abb))
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
p
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
geom_point(size=3, aes(col = murders$region) ) +
geom_text(nudge_x = 0.075) +
scale_x_continuous(trans = "log10") +
scale_y_log10() +
xlab("Population in millions (log scale)") +
ylab("Total murders (log scale)") +
ggtitle("Gun Murders")
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
View(r)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
install.packages("ggthemes")
install.packages("ggthemes", dependencies = TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
install.packages("ggrepel")
source('~/MEGA/7. Semester/Usability/Modeling/ggplot.R', echo=TRUE)
